{"version":3,"sources":["components/Users/User.module.css","components/common/Paginator/Paginator.module.css","redux/action-creators/users.ts","components/Users/User.tsx","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors/users-selectors.ts","components/Users/UsersContainer.tsx","assets/images/user-avatar.webp"],"names":["module","exports","toggleFollowAC","userId","type","TOGGLE_FOLLOW","setUsersAC","users","SET_USERS","setCurrentPageAC","currentPage","SET_CURRENT_PAGE","setTotalCountAC","totalCount","SET_TOTAL_COUNT","toggleIsFetchingAC","isFetching","TOGGLE_IS_FETCHING","toggleFollowingProgressAC","followingInProgress","TOGGLE_FOLLOWING_PROGRESS","User","onClick","id","followed","img","name","status","isButtonDisabled","className","s","container","toString","item","follow","to","avatar","src","defaultImg","alt","Button","disabled","red","information","information__item","Paginator","count","portionSize","setCurrentPage","useEffect","setPortionNumber","Math","ceil","pagesCount","pages","i","push","portionCount","useState","portionNumber","leftPortionPageNumber","rightPortionPageNumber","isPageLinkAreActive","page","styles","selected","filter","map","Users","onFollowClick","photos","small","some","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsers","state","usersPage","user","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","props","toggleFollow","getIsFollowed","this","Preloader","React","Component","compose","connect","setUsers","setTotalCount","toggleIsFetching","dispatch","usersAPI","res","data","items","console","warn","isFollowed","unfollowUser","resultCode","followUser"],"mappings":"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","file":"static/js/5.9fe24a5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"User_container__2v_dR\",\"item\":\"User_item__1tlbQ\",\"follow\":\"User_follow__fHQHi\",\"avatar\":\"User_avatar__ucY4X\",\"status\":\"User_status__1NWGK\",\"information\":\"User_information__2TZyY\",\"information__item\":\"User_information__item__2KobZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Paginator_selected__75wlc\",\"page\":\"Paginator_page__2IsOl\"};","import {\r\n    SET_CURRENT_PAGE,\r\n    SET_TOTAL_COUNT,\r\n    SET_USERS,\r\n    TOGGLE_FOLLOW,\r\n    TOGGLE_IS_FETCHING, TOGGLE_FOLLOWING_PROGRESS,\r\n    UserType\r\n} from \"../reducers/users-reducer\";\r\nimport {ThunkType} from \"../redux-store\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\nexport type UsersActionsType =\r\n    toggleFollowACType\r\n    | setUsersACType\r\n    | setCurrentPageACType\r\n    | setTotalCountACType\r\n    | toggleIsFetchingACType\r\n    | toggleIsFollowingProgressACType\r\n\r\nexport type toggleFollowACType = ReturnType<typeof toggleFollowAC>\r\nexport const toggleFollowAC = (userId: number) => {\r\n    return {\r\n        type: TOGGLE_FOLLOW,\r\n        userId: userId\r\n    } as const\r\n\r\n}\r\n\r\nexport type setUsersACType = ReturnType<typeof setUsersAC>\r\nexport const setUsersAC = (users: Array<UserType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users,\r\n    } as const\r\n}\r\n\r\nexport type setCurrentPageACType = ReturnType<typeof setCurrentPageAC>\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage,\r\n    } as const\r\n}\r\n\r\nexport type setTotalCountACType = ReturnType<typeof setTotalCountAC>\r\nexport const setTotalCountAC = (totalCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_COUNT,\r\n        totalCount,\r\n    } as const\r\n}\r\n\r\nexport type toggleIsFetchingACType = ReturnType<typeof toggleIsFetchingAC>\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching,\r\n    } as const\r\n}\r\n\r\nexport type toggleIsFollowingProgressACType = ReturnType<typeof toggleFollowingProgressAC>\r\nexport const toggleFollowingProgressAC = (followingInProgress: boolean, userId: number) => {\r\n    return {\r\n        type: TOGGLE_FOLLOWING_PROGRESS,\r\n        followingInProgress,\r\n        userId,\r\n    } as const\r\n}\r\n\r\n// THUNK\r\nexport const getUsersTC = (currentPage: number, count: number): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(toggleIsFetchingAC(true))\r\n        const res = await usersAPI.getUsers(currentPage, count)\r\n        dispatch(toggleIsFetchingAC(false))\r\n        dispatch(setCurrentPageAC(currentPage))\r\n        dispatch(setUsersAC(res.data.items));\r\n        dispatch(setTotalCountAC(res.data.totalCount));\r\n\r\n    } catch (err: any) {\r\n        console.warn(err)\r\n    }\r\n\r\n}\r\n\r\nexport const getIsFollowedTC = (userId: number): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(toggleFollowingProgressAC(true, userId))\r\n        const res = await usersAPI.isFollowed(userId)\r\n        if (res.data === true) {\r\n            const res = await usersAPI.unfollowUser(userId)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(toggleFollowAC(userId))\r\n            }\r\n            dispatch(toggleFollowingProgressAC(false, userId))\r\n        }\r\n        if (res.data === false) {\r\n            const res = await usersAPI.followUser(userId)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(toggleFollowAC(userId))\r\n            }\r\n            dispatch(toggleFollowingProgressAC(false, userId))\r\n        }\r\n    } catch (err: any) {\r\n        console.warn(err)\r\n    }\r\n}","import React from 'react';\r\nimport s from './User.module.css';\r\nimport {Button} from \"../../UI/Button/Button\";\r\nimport defaultImg from \"../../assets/images/user-avatar.webp\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    onClick: () => void\r\n    id: number\r\n    followed: boolean\r\n    img: string\r\n    name: string\r\n    status: string\r\n    isButtonDisabled: boolean\r\n}\r\n\r\nexport const User: React.FC<UsersPropsType> = (\r\n    {\r\n        onClick, id,\r\n        followed, img, name,\r\n        status, isButtonDisabled, ...props\r\n    }) => {\r\n\r\n    return (\r\n        <div className={s.container} key={id}>\r\n            <div id={id.toString()} className={s.item}>\r\n                <div className={s.follow}>\r\n                    <NavLink to={`/profile/${id}`}>\r\n                        <img\r\n                            className={s.avatar}\r\n                            src={img !== null ? img : defaultImg}\r\n                            alt=\"avatar\"\r\n                        />\r\n                    </NavLink>\r\n                    <Button\r\n                        disabled={isButtonDisabled}\r\n                        red={followed}\r\n                        onClick={onClick}\r\n                    >\r\n                        {followed ? \"Unfollow\" : \"Follow\"}\r\n                    </Button>\r\n                </div>\r\n                <div className={s.information}>\r\n                    <div className={s.information__item}>\r\n                        <h3>{name}</h3>\r\n                        <div className={s.status}>\r\n                            {status}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport styles from './Paginator.module.css'\r\nimport {Button} from \"../../../UI/Button/Button\";\r\n\r\ntype PaginatorType = {\r\n    count: number\r\n    totalCount: number\r\n    currentPage: number\r\n    portionSize?: number\r\n    setCurrentPage: (page: number) => void\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorType> = ({\r\n                                                       totalCount,\r\n                                                       count,\r\n                                                       portionSize = 10,\r\n                                                       setCurrentPage,\r\n                                                       currentPage\r\n                                                   }) => {\r\n\r\n    useEffect(() => {\r\n        setPortionNumber(Math.ceil(currentPage / portionSize))\r\n    }, [currentPage, portionSize]);\r\n\r\n    let pagesCount = Math.ceil(totalCount / count);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    const isPageLinkAreActive = (page: number, currentPage: number) => {\r\n        return currentPage === page ? `${styles.selected} ${styles.page}` : `${styles.page}`\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 &&\r\n\t\t\t<Button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>Prev</Button>\r\n            }\r\n\r\n            {pages\r\n                .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                .map(page => {\r\n                    return (\r\n                        <span\r\n                            key={page}\r\n                            className={isPageLinkAreActive(page, currentPage)}\r\n                            onClick={() => setCurrentPage(page)}\r\n                        >{page}</span>\r\n                    )\r\n                })}\r\n            {portionCount > portionNumber &&\r\n\t\t\t<Button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>Next</Button>\r\n            }\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {User} from \"./User\";\r\nimport {UserType} from \"../../redux/reducers/users-reducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    count: number\r\n    totalCount: number\r\n    currentPage: number\r\n    followingInProgress: number[]\r\n    onFollowClick: (userId: number) => void\r\n    setCurrentPage: (page: number) => void\r\n}\r\n\r\n\r\nexport const Users: React.FC<UsersPropsType> = ({\r\n                                                    totalCount,\r\n                                                    users,\r\n                                                    count,\r\n                                                    followingInProgress,\r\n                                                    currentPage,\r\n                                                    onFollowClick,\r\n                                                    setCurrentPage\r\n                                                }) => {\r\n\r\n    const isButtonDisabled = (userId: number) => {\r\n        return followingInProgress.some(id => id === userId)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                       count={count}\r\n                       totalCount={totalCount}\r\n                       setCurrentPage={setCurrentPage}\r\n            />\r\n\r\n            {users && users.map(({\r\n                                     id, followed, photos,\r\n                                     name, status\r\n                                 }) => {\r\n                return (\r\n                    <User\r\n                        key={id}\r\n                        id={id}\r\n                        followed={followed}\r\n                        img={photos.small}\r\n                        name={name}\r\n                        status={status}\r\n                        isButtonDisabled={isButtonDisabled(id)}\r\n                        onClick={() => onFollowClick(id)}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {RootStateType} from \"../redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state: RootStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(user => true)\r\n})\r\n\r\nexport const getPageSize = (state: RootStateType) => {\r\n    return state.usersPage.count\r\n}\r\n\r\nexport const getTotalUsersCount = (state: RootStateType) => {\r\n    return state.usersPage.totalCount\r\n}\r\n\r\nexport const getCurrentPage = (state: RootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: RootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: RootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {UsersPageType, UserType} from \"../../redux/reducers/users-reducer\";\r\nimport {\r\n    getIsFollowedTC,\r\n    getUsersTC,\r\n    setCurrentPageAC,\r\n    setTotalCountAC,\r\n    setUsersAC,\r\n    toggleFollowAC,\r\n    toggleIsFetchingAC\r\n} from \"../../redux/action-creators/users\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/selectors/users-selectors\";\r\n\r\nexport type mapDispatchToPropsType = {\r\n    onFollowClick: (userId: number) => void,\r\n    setUsers: (users: Array<UserType>) => void,\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalCount: (totalCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    getUsers: (currentPage: number, count: number) => void\r\n    getIsFollowed: (userId: number) => void\r\n}\r\nexport type UsersContainerPropsType = UsersPageType & mapDispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.count)\r\n    }\r\n\r\n    setCurrentPage = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.count)\r\n    }\r\n\r\n    toggleFollow = (userId: number) => {\r\n        this.props.getIsFollowed(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ?\r\n                    <Preloader/>\r\n                    :\r\n                    <Users\r\n                        users={this.props.users}\r\n                        count={this.props.count}\r\n                        currentPage={this.props.currentPage}\r\n                        totalCount={this.props.totalCount}\r\n                        followingInProgress={this.props.followingInProgress}\r\n                        onFollowClick={this.toggleFollow}\r\n                        setCurrentPage={this.setCurrentPage}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet\r\n    mapStateToProps = (state: RootStateType): UsersPageType => {\r\n        return {\r\n            users: getUsers(state),\r\n            count: getPageSize(state),\r\n            totalCount: getTotalUsersCount(state),\r\n            currentPage: getCurrentPage(state),\r\n            isFetching: getIsFetching(state),\r\n            followingInProgress: getFollowingInProgress(state),\r\n        }\r\n    }\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        onFollowClick: toggleFollowAC,\r\n        setUsers: setUsersAC,\r\n        setCurrentPage: setCurrentPageAC,\r\n        setTotalCount: setTotalCountAC,\r\n        toggleIsFetching: toggleIsFetchingAC,\r\n        getUsers: getUsersTC,\r\n        getIsFollowed: getIsFollowedTC,\r\n    })\r\n)(UsersContainer)\r\n","export default __webpack_public_path__ + \"static/media/user-avatar.2ca07d6b.webp\";"],"sourceRoot":""}