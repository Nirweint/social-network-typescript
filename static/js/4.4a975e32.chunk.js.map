{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/Dialogs.tsx","redux/action-creators/dialog.ts","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/AddMessageForm/AddMessageForm.module.css"],"names":["DialogItem","props","path","id","className","style","dialog","avatar","src","img","alt","to","isActive","active","name","Message","messageStyle","head","message","right","cloud","messageText","time","AddMessageForm","initialValues","onSubmit","values","setSubmitting","resetForm","validate","errors","length","s","body","inputItem","component","type","inputBtn","error","Component","Dialogs","dialogsPage","useSelector","state","dialogs","useTypedSelector","dispatch","useDispatch","dialogsElements","map","p","messagesElements","messages","m","dialogsItems","title","chatBody","newMessage","ADD_MESSAGE","addMessageAC","auth","isAuth","module","exports"],"mappings":"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","file":"static/js/4.4a975e32.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './DialogItem.module.css';\r\n\r\ntype DialogItemPropsType = {\r\n    name: string\r\n    id: string\r\n    img: string\r\n}\r\n\r\nexport function DialogItem(props: DialogItemPropsType) {\r\n\r\n    const activeLinkStyle = ({isActive}: {isActive: boolean}) => isActive ? style.active : \"\"\r\n    const path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={style.dialog}>\r\n            <img className={style.avatar} src={props.img} alt=\"avatar\"/>\r\n            <NavLink to={path} className={activeLinkStyle}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport style from './Message.module.css';\r\n\r\ntype MessagePropsType = {\r\n    messageText: string\r\n    id: string\r\n    name: string\r\n    time: string\r\n    avatar: string\r\n    head: string\r\n}\r\n\r\nexport function Message(props: MessagePropsType) {\r\n\r\n    let messageStyle;\r\n    props.name === props.head ? messageStyle = `${style.message} ${style.right}` : messageStyle = style.message;\r\n\r\n    return (\r\n        <div className={messageStyle} key={props.id}>\r\n            <div className={style.avatar}>\r\n                <img src={props.avatar} alt=\"avatar\"/>\r\n            </div>\r\n            <div className={style.cloud}>\r\n                <div className={style.name}>{props.name}</div>\r\n                <div className={style.messageText}>{props.messageText}</div>\r\n                <div className={style.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport s from \"./AddMessageForm.module.css\";\r\nimport {ErrorMessage, Field, Form, Formik, FormikHelpers} from \"formik\";\r\n\r\ntype AddMessageFormPropsType = {\r\n    onSubmit: (newMessage: string) => void\r\n}\r\ntype AddMessageFormValues = {\r\n    message: string\r\n}\r\n\r\nexport const AddMessageForm = (props: AddMessageFormPropsType) => {\r\n\r\n    const addPostFormValidate = (values: AddMessageFormValues) => {\r\n        let errors: Partial<AddMessageFormValues> = {};\r\n        if (!values.message) {\r\n            errors.message = 'Field is required';\r\n        } else if (values.message.length > 50) {\r\n            errors.message = 'Max Length is 50 symbols';\r\n        }\r\n        return errors\r\n    }\r\n\r\n    const initValues = {\r\n        message: '',\r\n    }\r\n\r\n    const onSubmitHandler = (\r\n        values: AddMessageFormValues,\r\n        {setSubmitting, resetForm}: FormikHelpers<AddMessageFormValues>\r\n    ) => {\r\n        props.onSubmit(values.message)\r\n        resetForm({values: {message: ''}})\r\n        setSubmitting(false);\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={initValues}\r\n                onSubmit={onSubmitHandler}\r\n                validate={addPostFormValidate}\r\n        >\r\n            <Form className={s.body}>\r\n                <Field\r\n                    className={s.inputItem}\r\n                    name=\"message\"\r\n                    component={'input'}\r\n                />\r\n                <button type=\"submit\" className={s.inputBtn}>Add</button>\r\n                <ErrorMessage name=\"message\" component=\"div\" className={s.error}/>\r\n            </Form>\r\n        </Formik>\r\n\r\n    );\r\n}","import React, {ComponentType} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    return (props: T) => {\r\n\r\n        const isAuth = useTypedSelector(state => state.auth.isAuth)\r\n\r\n        if (!isAuth) return <Navigate to=\"/login\"/>\r\n        return <Component {...props as T}/>\r\n    }\r\n}","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {AddMessageForm} from \"./AddMessageForm/AddMessageForm\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {DialogsPageType} from \"../../redux/reducers/dialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {addMessageAC} from \"../../redux/action-creators/dialog\";\r\n\r\nconst Dialogs: React.FC = withAuthRedirect(() => {\r\n\r\n    //get dialogsPage with useSelector, here i can get only state from reducer\r\n    let dialogsPage = useSelector<RootStateType, DialogsPageType>(state => state.dialogsPage)\r\n\r\n    // get dialogs with custom hook, here i get in dialogsPage/dialogs. i can't do this with useSelector\r\n    let dialogs = useTypedSelector(state => state.dialogsPage.dialogs)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addNewMessage = (newMessage: string) => {\r\n        dispatch(addMessageAC(newMessage))\r\n    }\r\n\r\n    const dialogsElements = dialogs\r\n        .map(p => <DialogItem\r\n            key={p.id}\r\n            name={p.name}\r\n            id={p.id}\r\n            img={p.img}\r\n        />)\r\n\r\n    const messagesElements = dialogsPage.messages\r\n        .map(m => <Message\r\n            key={m.id}\r\n            messageText={m.messageText}\r\n            id={m.id}\r\n            name={m.name}\r\n            time={m.time}\r\n            avatar={m.avatar}\r\n            head={m.head}\r\n        />)\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                <h2 className={style.title}>Dialogs:</h2>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.chatBody}>\r\n                <div className={style.messages}>{messagesElements}</div>\r\n                <AddMessageForm\r\n                    onSubmit={addNewMessage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Dialogs;\r\n\r\n// TODO add style to messages go up, when you write new messages","import {ADD_MESSAGE} from \"../reducers/dialogs-reducer\";\r\n\r\nexport type DialogsActionsType = addMessageACType\r\n\r\nexport type addMessageACType = ReturnType<typeof addMessageAC>\r\nexport const addMessageAC = (newMessage: string) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessage,\r\n    } as const\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2tYbV\",\"dialogsItems\":\"Dialogs_dialogsItems__x-Xa6\",\"messages\":\"Dialogs_messages__1ceYo\",\"message\":\"Dialogs_message__32ctE\",\"title\":\"Dialogs_title__1n2QP\",\"chatBody\":\"Dialogs_chatBody__6QaAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3ux5V\",\"active\":\"DialogItem_active__LJdUi\",\"avatar\":\"DialogItem_avatar__2n7BW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2WPQl\",\"avatar\":\"Message_avatar__1VBkd\",\"cloud\":\"Message_cloud__3Anvv\",\"name\":\"Message_name__2ZFaS\",\"messageText\":\"Message_messageText__1iDRn\",\"time\":\"Message_time__dCPGd\",\"right\":\"Message_right__1FH6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"AddMessageForm_body__196ZF\",\"inputItem\":\"AddMessageForm_inputItem__37tPh\",\"inputBtn\":\"AddMessageForm_inputBtn__18SsI\",\"error\":\"AddMessageForm_error__4urc9\"};"],"sourceRoot":""}