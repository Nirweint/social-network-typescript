{"version":3,"sources":["components/Sidebar/Sidebar.module.css","hooks/useTypedSelector.ts","components/Login/LoginForm.module.css","UI/Button/Button.tsx","api/api.ts","UI/Button/Button.module.css","components/Header/Header.module.css","assets/loading/spinner-1s-200px.svg","components/common/Preloader/Preloader.tsx","components/Sidebar/ActiveFriends/ActiveFriends.module.css","redux/reducers/dialogs-reducer.ts","redux/reducers/profile-reducer.ts","redux/reducers/users-reducer.ts","components/Sidebar/ActiveFriends/Friend/Friend.module.css","components/Login/Login.module.css","components/Sidebar/ActiveFriends/Friend/Friend.tsx","components/Sidebar/ActiveFriends/ActiveFriends.tsx","components/Sidebar/Sidebar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Login/LoginForm.tsx","redux/reducers/auth-reducer.ts","redux/action-creators/auth.ts","components/Login/Login.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/reducers/app-reducer.ts","redux/selectors/app-selectors.ts","redux/selectors/auth-selectors.ts","App.tsx","redux/action-creators/app.ts","redux/reducers/sidebar-reducer.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","useTypedSelector","useSelector","Button","red","className","restProps","finalClassName","s","btn","default","instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","count","get","isFollowed","userId","followUser","post","unfollowUser","delete","profileAPI","getProfile","getProfileStatus","updateProfileStatus","status","put","authAPI","getUserData","login","email","password","rememberMe","logout","Preloader","src","preloader","alt","avatarImage","ADD_MESSAGE","initialDialogsState","dialogs","id","v1","name","img","messages","head","messageText","time","avatar","dialogsReducer","state","action","type","newMessage","imgForNewPost","ADD_POST","SET_USER_INFO","SET_PROFILE_STATUS","initialProfileState","userInfo","lookingForAJob","lookingForAJobDescription","fullName","aboutMe","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","photos","small","large","posts","message","likesCount","profileReducer","newPostText","TOGGLE_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","initialUsersState","users","totalCount","isFetching","followingInProgress","usersReducer","map","u","followed","filter","Friend","props","style","ActiveFriends","activeLinkStyle","isActive","activeLink","FriendElement","friends","friend","to","activeFriends","Sidebar","sidebar","authId","auth","isAuth","useParams","nav","item","navigateTo","title","News","Music","Settings","LoginForm","htmlFor","formInput","placeholder","component","error","checkbox","SET_USER_DATA","initState","setAuthUserDataAC","payload","getUserDataTC","dispatch","a","res","data","resultCode","console","warn","Login","useDispatch","loginWrapper","initialValues","onSubmit","values","setSubmitting","loginTC","validate","errors","test","Header","logoutHandler","header","logo","loginBlock","onClick","HeaderContainer","logoutTC","this","React","Component","connect","INITIALIZED_SUCCESS","initialState","initialized","selectInitialized","app","selectAuthID","Dialogs","lazy","Profile","UsersContainer","App","authID","useEffect","promise","Promise","all","isUserAuth","fallback","path","element","initialSidebarState","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e760cfa4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__3sw-s\",\"item\":\"Sidebar_item__2FbfF\",\"activeLink\":\"Sidebar_activeLink__8-Bs3\",\"activeFriends\":\"Sidebar_activeFriends__2IQyO\",\"title\":\"Sidebar_title__39vEM\"};","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../redux/redux-store\";\r\n\r\n// custom hook to use Selector with types\r\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"LoginForm_error__11n2o\",\"formInput\":\"LoginForm_formInput__17RlG\",\"checkbox\":\"LoginForm_checkbox__3ojoA\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${className} ${s.btn} ${red ? s.red : s.default}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"9776f825-db80-4051-9f58-6c0d39788ac9\",\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, count: number = 10) {\r\n        return instance.get(`/users?page=${currentPage}&count=${count}`)\r\n    },\r\n    isFollowed(userId: number) {\r\n        return instance.get(`/follow/${userId}`)\r\n    },\r\n    followUser(userId: number) {\r\n        return instance.post(`/follow/${userId}`)\r\n    },\r\n    unfollowUser(userId: number) {\r\n        return instance.delete(`/follow/${userId}`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`/profile/${userId}`)\r\n    },\r\n    getProfileStatus(userId: number) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    updateProfileStatus(status: string) {\r\n        return instance.put(`/profile/status/`, {status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getUserData() {\r\n        return instance.get<getUserDataResponseType>(\"/auth/me\")\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(\"/auth/login\", {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(\"/auth/login\")\r\n    },\r\n}\r\n\r\nexport type getUserDataResponseType = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2BmGI\",\"red\":\"Button_red__1o-Pj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__22AGA\",\"logo\":\"Header_logo__1sNVu\",\"loginBlock\":\"Header_loginBlock__396cc\"};","export default __webpack_public_path__ + \"static/media/spinner-1s-200px.80e82531.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/loading/spinner-1s-200px.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt={\"preloader\"}/>\r\n        </>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeFriends\":\"ActiveFriends_activeFriends__1Peqe\",\"activeLink\":\"ActiveFriends_activeLink__eUM7R\"};","import {v1} from \"uuid\";\r\nimport {DialogsActionsType} from \"../action-creators/dialog\";\r\n\r\nconst avatarImage = \"https://sun9-52.userapi.com/impf/c850120/v850120142/de34f/-V0Lx1I09fo.jpg?size=2160x2160&quality=96&sign=e11d8ba5c927096811c14b692a8f67e0&type=album\";\r\n\r\nexport const ADD_MESSAGE = \"dialogs/ADD-MESSAGE\"\r\n\r\nexport type DialogType = {\r\n    id: string\r\n    name: string\r\n    img: string\r\n}\r\nexport type MessageType = {\r\n    id: string\r\n    messageText: string\r\n    name: string\r\n    time: string\r\n    avatar: string\r\n    head: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n}\r\n\r\nconst initialDialogsState = {\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: \"Alex\",\r\n            img: avatarImage,\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Sofa\",\r\n            img: \"https://sun9-80.userapi.com/impg/gJeHyr8s0kj96H0LVEz1Gq7vHteh1QYV8_Kdow/FRSJlnhrNaY.jpg?size=878x627&quality=96&sign=00b60f8e76d747c622535e511da56ce4&type=album\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Oleg\",\r\n            img: \"https://sun1.beltelecom-by-minsk.userapi.com/s/v1/ig1/r3RvNnQxvdb_L2EuFMLfbDCBxbtm8pL8xQKGYVNbvsmoCAxAOr_9Hyi1KkeIFbCVhrhQ_mvT.jpg?size=200x200&quality=96&crop=1,1,1917,1917&ava=1\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Pasha\",\r\n            img: \"https://sun1.beltelecom-by-minsk.userapi.com/s/v1/if1/LuHL7kJap_p2AMvhHWndMpcGRj6lv9f_OiEscfE9zqkeFhQAbA7NB15Bfglq5l_IPB2JOmHb.jpg?size=200x200&quality=96&crop=560,0,720,720&ava=1\"\r\n        },\r\n    ],\r\n    messages: [\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"I'm gonna make him an offer he can't refuse.\",\r\n            name: \"Alex\",\r\n            time: \"22:00\",\r\n            avatar: avatarImage,\r\n        },\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"A friend should always underestimate your virtues and an enemy overestimate your faults.\",\r\n            name: \"Sofa\",\r\n            time: \"22:00\",\r\n            avatar: \"https://sun9-80.userapi.com/impg/gJeHyr8s0kj96H0LVEz1Gq7vHteh1QYV8_Kdow/FRSJlnhrNaY.jpg?size=878x627&quality=96&sign=00b60f8e76d747c622535e511da56ce4&type=album\",\r\n        },\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"Revenge is a dish best served cold.\",\r\n            name: \"Alex\",\r\n            time: \"22:00\",\r\n            avatar: avatarImage,\r\n        },\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"You spend time with your family?\",\r\n            name: \"Sofa\",\r\n            time: \"22:00\",\r\n            avatar: \"https://sun9-80.userapi.com/impg/gJeHyr8s0kj96H0LVEz1Gq7vHteh1QYV8_Kdow/FRSJlnhrNaY.jpg?size=878x627&quality=96&sign=00b60f8e76d747c622535e511da56ce4&type=album\",\r\n        },\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"Sure I do.\",\r\n            name: \"Alex\",\r\n            time: \"22:00\",\r\n            avatar: avatarImage,\r\n        },\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"Good. 'Cause a man who doesn't spend time with his family can never be a real man.\",\r\n            name: \"Sofa\",\r\n            time: \"22:00\",\r\n            avatar: \"https://sun9-80.userapi.com/impg/gJeHyr8s0kj96H0LVEz1Gq7vHteh1QYV8_Kdow/FRSJlnhrNaY.jpg?size=878x627&quality=96&sign=00b60f8e76d747c622535e511da56ce4&type=album\",\r\n        },\r\n    ],\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsPageType = initialDialogsState, action: DialogsActionsType): DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state, messages: [...state.messages, {\r\n                    head: \"Alex\",\r\n                    id: v1(),\r\n                    messageText: action.newMessage,\r\n                    name: \"Alex\",\r\n                    time: \"22:00\",\r\n                    avatar: avatarImage,\r\n                }]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {v1} from \"uuid\";\r\nimport {ProfileActionsType} from \"../action-creators/profile\";\r\n\r\nexport const imgForNewPost = \"https://sun9-52.userapi.com/impf/c850120/v850120142/de34f/-V0Lx1I09fo.jpg?size=2160x2160&quality=96&sign=e11d8ba5c927096811c14b692a8f67e0&type=album\"\r\n\r\nexport const ADD_POST = \"profile/ADD-POST\"\r\nexport const SET_USER_INFO = \"profile/SET-USER-INFO\"\r\nexport const SET_PROFILE_STATUS = \"profile/SET-PROFILE-STATUS\"\r\n\r\n\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n    img: string\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\ntype ContactsType = {\r\n    github: string | null\r\n    vk: string | null\r\n    facebook: string | null\r\n    instagram: string | null\r\n    twitter: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n    mainLink: string | null\r\n}\r\nexport type UserInfoType = {\r\n    aboutMe: string\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    userInfo: UserInfoType\r\n    status: string\r\n}\r\n\r\nexport const initialProfileState: ProfilePageType = {\r\n    userInfo: {\r\n        userId: 1,\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: \"\",\r\n        fullName: \"\",\r\n        aboutMe: \"\",\r\n        contacts: {\r\n            github: null,\r\n            vk: null,\r\n            facebook: null,\r\n            instagram: null,\r\n            twitter: null,\r\n            website: null,\r\n            youtube: null,\r\n            mainLink: null,\r\n        },\r\n        photos: {\r\n            small: \"\",\r\n            large: \"\",\r\n        },\r\n    } as UserInfoType,\r\n    posts: [\r\n        {\r\n            id: v1(),\r\n            message: \"Hello, how are you?\",\r\n            likesCount: 5,\r\n            img: imgForNewPost,\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: \"How was your day?\",\r\n            likesCount: 9,\r\n            img: imgForNewPost,\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: \"This day is amazing\",\r\n            likesCount: 1,\r\n            img: imgForNewPost,\r\n        },\r\n    ] as Array<PostType>,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReducer = (state = initialProfileState, action: ProfileActionsType): ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state, posts: [...state.posts, {\r\n                    id: v1(),\r\n                    message: action.newPostText,\r\n                    likesCount: 0,\r\n                    img: imgForNewPost,\r\n                }]\r\n            }\r\n\r\n        case SET_USER_INFO:\r\n            return {...state, userInfo: action.userInfo}\r\n\r\n        case SET_PROFILE_STATUS:\r\n            return {...state, status: action.status}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {UsersActionsType} from \"../action-creators/users\";\r\n\r\nexport const TOGGLE_FOLLOW = \"users/TOGGLE-FOLLOW\"\r\nexport const SET_USERS = \"users/SET-USERS\";\r\nexport const SET_CURRENT_PAGE = \"users/SET-CURRENT-PAGE\"\r\nexport const SET_TOTAL_COUNT = \"users/SET-TOTAL-COUNT\"\r\nexport const TOGGLE_IS_FETCHING = \"users/TOGGLE-IS-FETCHING\"\r\nexport const TOGGLE_FOLLOWING_PROGRESS = \"users/TOGGLE-IS-FOLLOWING-PROGRESS\"\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: { small: string, large: string }\r\n    followed: boolean\r\n    // location: UserLocationType\r\n}\r\nexport type UsersPageType = {\r\n    users: Array<UserType>\r\n    count: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\nconst initialUsersState: UsersPageType = {\r\n    users: [] as Array<UserType>,\r\n    count: 8,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state = initialUsersState, action: UsersActionsType): UsersPageType => {\r\n\r\n    switch (action.type) {\r\n        case TOGGLE_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(u => u.id === action.userId ? {...u, followed: !u.followed} : u)\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalCount: action.totalCount}\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Friend_avatar__1NyzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__2h91B\"};","import React from 'react';\r\nimport style from './Friend.module.css';\r\n\r\ntype FriendPropsType = {\r\n    id: string\r\n    name: string\r\n    img: string\r\n}\r\n\r\nexport function Friend(props: FriendPropsType ) {\r\n    return (\r\n        <div key={props.id}>\r\n            <img className={style.avatar} src={props.img} alt=\"avatar\"/>\r\n            <div>{props.name}</div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Friend} from \"./Friend/Friend\";\r\nimport style from './ActiveFriends.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {FriendType} from \"../../../redux/reducers/sidebar-reducer\";\r\n\r\ntype ActiveFriendsPropsType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\nexport function ActiveFriends(props: ActiveFriendsPropsType) {\r\n\r\n    const activeLinkStyle = ({isActive}: {isActive: boolean}) => isActive ? style.activeLink : \"\"\r\n\r\n    let FriendElement = props.friends.map(friend =><NavLink className={activeLinkStyle} key={friend.id} to={`/dialogs/${friend.id}`}><Friend  id={friend.id} name={friend.name} img={friend.img}/></NavLink> )\r\n\r\n    return (\r\n        <div className={style.activeFriends}>\r\n            {FriendElement}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {NavLink, useParams} from 'react-router-dom';\r\nimport style from './Sidebar.module.css';\r\nimport {ActiveFriends} from \"./ActiveFriends/ActiveFriends\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {FriendsType} from \"../../redux/reducers/sidebar-reducer\";\r\nimport {Nullable} from \"../../types\";\r\n\r\nexport const Sidebar = () => {\r\n    let sidebar = useSelector<RootStateType, FriendsType>(state => state.sidebar)\r\n    const authId = useTypedSelector(state => state.auth.id)\r\n    const isAuth = useTypedSelector(state => state.auth.isAuth)\r\n    const {userId} = useParams<'userId'>()\r\n\r\n    const navigateTo = (isAuth: boolean, authId: Nullable<number>, userId: string | undefined) => {\r\n        if (isAuth) {\r\n            return `/profile/${authId}`\r\n        }\r\n        if (!userId) {\r\n            return `/login`\r\n        }\r\n        return `/profile/${userId}`\r\n\r\n    }\r\n\r\n    const activeLinkStyle = ({isActive}: { isActive: boolean }) => isActive ? style.activeLink : \"\"\r\n    const activeLinkStyleForProfile = ({isActive}: { isActive: boolean }) => isActive && authId ? style.activeLink : \"\"\r\n\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink\r\n                    to={navigateTo(isAuth, authId, userId)}\r\n                    className={activeLinkStyleForProfile}>\r\n                    Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/dialogs\" className={activeLinkStyle}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/news\" className={activeLinkStyle}>News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/music\" className={activeLinkStyle}>Music</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/settings\" className={activeLinkStyle}>Settings</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/users\" className={activeLinkStyle}>Users</NavLink>\r\n            </div>\r\n            <div className={style.activeFriends}>\r\n                <h3 className={style.title}>Friends:</h3>\r\n                <ActiveFriends friends={sidebar.friends}/>\r\n            </div>\r\n        </nav>\r\n    );\r\n};","import React from 'react';\r\nimport style from './News.module.css';\r\n\r\nexport function News() {\r\n    return (\r\n        <div>News component</div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport style from './Music.module.css';\r\n\r\nexport function Music() {\r\n    return (\r\n        <div>Music component</div>\r\n    );\r\n}","import React from 'react';\r\nimport style from './Settings.module.css';\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>Settings component</div>\r\n    );\r\n}","import React from 'react';\r\nimport {ErrorMessage, Field, Form} from \"formik\";\r\nimport s from \"./LoginForm.module.css\";\r\nimport {Button} from \"../../UI/Button/Button\";\r\n\r\nexport const LoginForm = () => {\r\n    return (\r\n        <>\r\n            <Form>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <div>\r\n                    <Field\r\n                        className={s.formInput}\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"email\"\r\n                        type=\"email\"\r\n                    />\r\n                    <ErrorMessage name=\"email\" component=\"div\" className={s.error}/>\r\n                </div>\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <div>\r\n                    <Field className={s.formInput} id=\"password\" name=\"password\" type='password' placeholder=\"password\"/>\r\n                    <ErrorMessage name=\"password\" component=\"div\" className={s.error}/>\r\n                </div>\r\n                <div>\r\n                    <Field className={s.checkbox}  name=\"rememberMe\" type=\"checkbox\"/>\r\n                    <label className={s.checkbox} htmlFor=\"rememberMe\">remember me</label>\r\n                </div>\r\n                <Button type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </>\r\n    );\r\n}","import {AuthActionsType} from \"../action-creators/auth\";\r\n\r\nexport const SET_USER_DATA = \"auth/SET_USER_DATA\";\r\n\r\nexport type AuthStateType = {\r\n    id: number | null\r\n    login: string | null\r\n    email: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nconst initState: AuthStateType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state = initState, action: AuthActionsType): AuthStateType=> {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {...state, ...action.payload}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {SET_USER_DATA} from \"../reducers/auth-reducer\";\r\nimport {ThunkType} from \"../redux-store\";\r\nimport {authAPI} from \"../../api/api\";\r\nimport {Nullable} from \"../../types\";\r\n\r\nexport type AuthActionsType = setAuthUserDataACType\r\n\r\nexport type setAuthUserDataACType = ReturnType<typeof setAuthUserDataAC>\r\nexport const setAuthUserDataAC = (email: Nullable<string>, id: Nullable<number>, login: Nullable<string>, isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {email, id, login, isAuth},\r\n    } as const\r\n}\r\n\r\n// THUNK\r\nexport const getUserDataTC = (): ThunkType => async dispatch => {\r\n    try {\r\n        const res = await authAPI.getUserData()\r\n        if (res.data.resultCode === 0) {\r\n            const {email, id, login} = res.data.data\r\n            dispatch(setAuthUserDataAC(email, id, login, true))\r\n            return res\r\n        }\r\n    } catch (err: any) {\r\n        console.warn(err)\r\n    }\r\n}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean): ThunkType => async dispatch => {\r\n    try {\r\n        const res = await authAPI.login(email, password, rememberMe)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(getUserDataTC())\r\n        }\r\n    } catch (err: any) {\r\n        console.warn(err)\r\n    }\r\n}\r\n\r\nexport const logoutTC = (): ThunkType => async dispatch => {\r\n    try {\r\n        const res = await authAPI.logout()\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setAuthUserDataAC(null, null, null, false))\r\n        }\r\n    } catch (err: any) {\r\n        console.warn(err)\r\n    }\r\n}","import React from 'react';\r\nimport {Formik, FormikHelpers} from 'formik';\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/action-creators/auth\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport s from './Login.module.css'\r\n\r\ntype LoginValues = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n    const isAuth = useTypedSelector(state => state.auth.isAuth)\r\n    const authId = useTypedSelector(state => state.auth.id)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const loginValidate = (values: LoginValues) => {\r\n        let errors: Partial<LoginValues> = {};\r\n        if (!values.email) {\r\n            errors.email = 'Required';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n        }\r\n\r\n        if (!values.password) {\r\n            errors.password = 'Required';\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n    const initValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false,\r\n    }\r\n\r\n    const handleOnSubmitClick = (\r\n        values: LoginValues,\r\n        {setSubmitting }: FormikHelpers<LoginValues>,\r\n    ) => {\r\n        const {email, password, rememberMe} = values\r\n        dispatch(loginTC(email, password, rememberMe))\r\n        setSubmitting(false);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={`/profile/${authId}`}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginWrapper}>\r\n            <div>\r\n                <h1>Log in</h1>\r\n                <Formik\r\n                    initialValues={initValues}\r\n                    onSubmit={handleOnSubmitClick}\r\n                    validate={loginValidate}\r\n                >\r\n                    <LoginForm/>\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"../../UI/Button/Button\";\r\n\r\nexport type HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logoutHandler: () => void\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = ({isAuth, login, logoutHandler}) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                className={s.logo}\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Check_green_icon.svg/1200px-Check_green_icon.svg.png\"\r\n                alt=\"logo\"/>\r\n\r\n            <div className={s.loginBlock}>\r\n                {isAuth ? (\r\n                        <div>\r\n                            <span>{login}</span>\r\n                            <NavLink to={\"/login\"}>\r\n                                <Button onClick={logoutHandler}>Logout</Button>\r\n                            </NavLink>\r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                        <NavLink to={\"/login\"}>\r\n                            <Button>Login</Button>\r\n                        </NavLink>\r\n                    )}\r\n\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n};","import React from 'react';\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {getUserDataTC, logoutTC} from \"../../redux/action-creators/auth\";\r\nimport {Nullable} from \"../../types\";\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUserDataTC: () => void\r\n    logoutTC: () => void\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    login: Nullable<string>\r\n    isAuth: boolean\r\n}\r\n\r\nexport type HeaderContainerPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    logoutHandler = () => {\r\n        this.props.logoutTC()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header\r\n                {...this.props}\r\n                logoutHandler={this.logoutHandler}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: RootStateType): mapStateToPropsType => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {getUserDataTC, logoutTC})(HeaderContainer);","import {AppActionsType} from \"../action-creators/app\";\r\n\r\nexport const INITIALIZED_SUCCESS = \"app/INITIALIZED_SUCCESS\";\r\n\r\nexport type AppStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: AppStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): AppStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {...state, initialized: true,}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {RootStateType} from \"../redux-store\";\r\n\r\nexport const selectInitialized = (state: RootStateType) => state.app.initialized","import {RootStateType} from \"../redux-store\";\r\n\r\nexport const selectAuthID = (state: RootStateType) => state.auth.id","import React, {Suspense, useEffect} from 'react';\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useTypedSelector} from \"./hooks/useTypedSelector\";\r\n\r\nimport {Sidebar} from \"./components/Sidebar/Sidebar\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\n\r\nimport {initializeAppTC} from \"./redux/action-creators/app\";\r\nimport {selectInitialized} from \"./redux/selectors/app-selectors\";\r\nimport {selectAuthID} from \"./redux/selectors/auth-selectors\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'));\r\nconst Profile = React.lazy(() => import('./components/Profile/Profile'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nexport const App = () => {\r\n\r\n    const initialized = useTypedSelector(selectInitialized)\r\n    const authID = useTypedSelector(selectAuthID)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [dispatch])\r\n\r\n    const isUserAuth = authID ? `/profile/${authID}` : '/login'\r\n\r\n    if (!initialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <HeaderContainer/>\r\n            <Sidebar/>\r\n            <div className=\"app-wrapper-content\">\r\n                <Suspense fallback={<Preloader/>}>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Navigate to={isUserAuth}/>}/>\r\n                        <Route path=\"/profile/:userId\" element={<Profile/>}/>\r\n                        <Route path=\"/login\" element={<Login/>}/>\r\n                        <Route path=\"/dialogs\" element={<Dialogs/>}/>\r\n                        <Route path=\"/news\" element={<News/>}/>\r\n                        <Route path=\"/music\" element={<Music/>}/>\r\n                        <Route path=\"/settings\" element={<Settings/>}/>\r\n                        <Route path=\"/users\" element={<UsersContainer/>}/>\r\n                    </Routes>\r\n                </Suspense>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {INITIALIZED_SUCCESS} from \"../reducers/app-reducer\";\r\nimport {ThunkType} from \"../redux-store\";\r\nimport {getUserDataTC} from \"./auth\";\r\n\r\nexport type AppActionsType = initializedSuccessACType\r\n\r\nexport type initializedSuccessACType = ReturnType<typeof initializedSuccessAC>\r\nexport const initializedSuccessAC = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS,\r\n    } as const\r\n}\r\n\r\n// THUNK\r\nexport const initializeAppTC = (): ThunkType => async dispatch => {\r\n    const promise = dispatch(getUserDataTC())\r\n    await Promise.all([promise])\r\n    dispatch(initializedSuccessAC())\r\n\r\n}","import {v1} from \"uuid\";\r\n\r\nexport type FriendType = {\r\n    id: string\r\n    name: string\r\n    img: string\r\n}\r\nexport type FriendsType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\nconst initialSidebarState = {\r\n    friends: [\r\n        {\r\n            id: v1(),\r\n            name: \"Alex\",\r\n            img: \"https://sun9-52.userapi.com/impf/c850120/v850120142/de34f/-V0Lx1I09fo.jpg?size=2160x2160&quality=96&sign=e11d8ba5c927096811c14b692a8f67e0&type=album\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Sofa\",\r\n            img: \"https://sun9-80.userapi.com/impg/gJeHyr8s0kj96H0LVEz1Gq7vHteh1QYV8_Kdow/FRSJlnhrNaY.jpg?size=878x627&quality=96&sign=00b60f8e76d747c622535e511da56ce4&type=album\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Oleg\",\r\n            img: \"https://sun1.beltelecom-by-minsk.userapi.com/s/v1/ig1/r3RvNnQxvdb_L2EuFMLfbDCBxbtm8pL8xQKGYVNbvsmoCAxAOr_9Hyi1KkeIFbCVhrhQ_mvT.jpg?size=200x200&quality=96&crop=1,1,1917,1917&ava=1\"\r\n        },\r\n    ],\r\n}\r\n\r\nexport const sidebarReducer = (state: FriendsType = initialSidebarState, action: any): FriendsType => {\r\n    return state;\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {\r\n    appReducer,\r\n    authReducer,\r\n    dialogsReducer,\r\n    profileReducer,\r\n    sidebarReducer,\r\n    usersReducer\r\n} from \"./reducers\";\r\nimport {\r\n    AppActionsType,\r\n    AuthActionsType,\r\n    DialogsActionsType,\r\n    ProfileActionsType, UsersActionsType\r\n} from \"./action-creators/types\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\nexport type ThunkType = ThunkAction<void, RootStateType, unknown, RootActionsType>\r\n\r\nexport type RootActionsType =\r\n    AuthActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | UsersActionsType\r\n    | AppActionsType\r\n\r\n//@ts-ignore\r\nwindow.store = store","import ReactDOM from \"react-dom\";\nimport {HashRouter} from \"react-router-dom\";\nimport {App} from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport React from \"react\";\nimport './index.css'\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(<React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>, document.getElementById('root')\n);"],"sourceRoot":""}