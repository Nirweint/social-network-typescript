{"version":3,"sources":["hooks/useTypedSelector.ts","components/Sidebar/Sidebar.module.css","components/Login/LoginForm.module.css","UI/Button/Button.tsx","api/api.ts","UI/Button/Button.module.css","components/Login/Login.module.css","components/Header/Header.module.css","assets/loading/spinner-1s-200px.svg","components/common/Preloader/Preloader.tsx","components/Sidebar/ActiveFriends/ActiveFriends.module.css","redux/reducers/dialogs-reducer.ts","redux/reducers/profile-reducer.ts","redux/reducers/users-reducer.ts","components/Sidebar/ActiveFriends/Friend/Friend.module.css","components/Sidebar/ActiveFriends/Friend/Friend.tsx","components/Sidebar/ActiveFriends/ActiveFriends.tsx","components/Sidebar/Sidebar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/selectors/auth-selectors.ts","components/Login/LoginForm.tsx","redux/reducers/auth-reducer.ts","redux/action-creators/auth.ts","components/Login/Login.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/reducers/app-reducer.ts","redux/selectors/app-selectors.ts","App.tsx","redux/action-creators/app.ts","redux/reducers/sidebar-reducer.ts","redux/redux-store.ts","index.tsx"],"names":["useTypedSelector","useSelector","module","exports","Button","red","className","restProps","finalClassName","s","btn","default","instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","count","get","isFollowed","userId","followUser","post","unfollowUser","delete","profileAPI","getProfile","updateProfile","data","put","getProfileStatus","updateProfileStatus","status","setProfileImage","photo","formData","FormData","append","authAPI","getUserData","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","Preloader","src","preloader","alt","avatarImage","ADD_MESSAGE","initialDialogsState","dialogs","id","v1","name","img","messages","head","messageText","time","avatar","dialogsReducer","state","action","type","newMessage","imgForNewPost","ADD_POST","SET_USER_INFO","SET_PROFILE_STATUS","SET_PROFILE_PHOTO","initialProfileState","userInfo","lookingForAJob","lookingForAJobDescription","fullName","aboutMe","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","photos","small","large","posts","message","likesCount","profileReducer","newPostText","TOGGLE_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","initialUsersState","users","totalCount","isFetching","followingInProgress","usersReducer","map","u","followed","filter","Friend","props","style","ActiveFriends","activeLinkStyle","isActive","activeLink","FriendElement","friends","friend","to","activeFriends","Sidebar","sidebar","authId","auth","isAuth","useParams","nav","item","navigateTo","title","News","Music","Settings","selectAuthID","selectIsAuth","selectCaptchaUrl","captchaUrl","selectAuthError","error","LoginForm","htmlFor","formInput","placeholder","component","color","checkbox","SET_USER_DATA","GET_CAPTCHA_URL","SET_ERROR","initState","setAuthUserDataAC","payload","setCaptchaUrlAC","setAuthErrorAC","getUserDataTC","dispatch","a","res","resultCode","console","warn","getCaptchaUrlTC","url","Login","useDispatch","loginWrapper","description","initialValues","onSubmit","values","setSubmitting","loginTC","validate","errors","test","Header","logoutHandler","header","logo","loginBlock","onClick","HeaderContainer","logoutTC","this","React","Component","connect","INITIALIZED_SUCCESS","initialState","initialized","selectInitialized","app","Dialogs","lazy","Profile","UsersContainer","App","authID","useEffect","promise","Promise","all","isUserAuth","fallback","path","element","initialSidebarState","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ae142e3.chunk.js","sourcesContent":["import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../redux/redux-store\";\r\n\r\n// custom hook to use Selector with types\r\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__3sw-s\",\"item\":\"Sidebar_item__2FbfF\",\"activeLink\":\"Sidebar_activeLink__8-Bs3\",\"activeFriends\":\"Sidebar_activeFriends__2IQyO\",\"title\":\"Sidebar_title__39vEM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"LoginForm_error__11n2o\",\"formInput\":\"LoginForm_formInput__17RlG\",\"checkbox\":\"LoginForm_checkbox__3ojoA\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${className} ${s.btn} ${red ? s.red : s.default}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}","import axios from \"axios\";\r\nimport {UserInfoType} from \"../redux/reducers/profile-reducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"9776f825-db80-4051-9f58-6c0d39788ac9\",\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, count: number = 10) {\r\n        return instance.get(`/users?page=${currentPage}&count=${count}`)\r\n    },\r\n    isFollowed(userId: number) {\r\n        return instance.get(`/follow/${userId}`)\r\n    },\r\n    followUser(userId: number) {\r\n        return instance.post(`/follow/${userId}`)\r\n    },\r\n    unfollowUser(userId: number) {\r\n        return instance.delete(`/follow/${userId}`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`/profile/${userId}`)\r\n    },\r\n    updateProfile(data: Omit<UserInfoType, 'photos' >) {\r\n        return instance.put(`/profile/`, data)\r\n    },\r\n    getProfileStatus(userId: number) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    updateProfileStatus(status: string) {\r\n        return instance.put(`/profile/status/`, {status})\r\n    },\r\n    setProfileImage(photo: File) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n\r\n        return instance.put(`/profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            }\r\n        })\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    getUserData() {\r\n        return instance.get<getUserDataResponseType>(\"/auth/me\")\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean, captcha?: string) {\r\n        return instance.post(\"/auth/login\", {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(\"/auth/login\")\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(\"/security/get-captcha-url\")\r\n    },\r\n\r\n}\r\n\r\nexport type getUserDataResponseType = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2BmGI\",\"red\":\"Button_red__1o-Pj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__2h91B\",\"description\":\"Login_description__3k7G2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__22AGA\",\"logo\":\"Header_logo__1sNVu\",\"loginBlock\":\"Header_loginBlock__396cc\"};","export default __webpack_public_path__ + \"static/media/spinner-1s-200px.80e82531.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/loading/spinner-1s-200px.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt={\"preloader\"}/>\r\n        </>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeFriends\":\"ActiveFriends_activeFriends__1Peqe\",\"activeLink\":\"ActiveFriends_activeLink__eUM7R\"};","import {v1} from \"uuid\";\r\nimport {DialogsActionsType} from \"../action-creators/dialog\";\r\n\r\nconst avatarImage = \"https://sun9-52.userapi.com/impf/c850120/v850120142/de34f/-V0Lx1I09fo.jpg?size=2160x2160&quality=96&sign=e11d8ba5c927096811c14b692a8f67e0&type=album\";\r\n\r\nexport const ADD_MESSAGE = \"dialogs/ADD-MESSAGE\"\r\n\r\nexport type DialogType = {\r\n    id: string\r\n    name: string\r\n    img: string\r\n}\r\nexport type MessageType = {\r\n    id: string\r\n    messageText: string\r\n    name: string\r\n    time: string\r\n    avatar: string\r\n    head: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n}\r\n\r\nconst initialDialogsState = {\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: \"Alex\",\r\n            img: avatarImage,\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Sofa\",\r\n            img: \"https://sun9-80.userapi.com/impg/gJeHyr8s0kj96H0LVEz1Gq7vHteh1QYV8_Kdow/FRSJlnhrNaY.jpg?size=878x627&quality=96&sign=00b60f8e76d747c622535e511da56ce4&type=album\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Oleg\",\r\n            img: \"https://sun1.beltelecom-by-minsk.userapi.com/s/v1/ig1/r3RvNnQxvdb_L2EuFMLfbDCBxbtm8pL8xQKGYVNbvsmoCAxAOr_9Hyi1KkeIFbCVhrhQ_mvT.jpg?size=200x200&quality=96&crop=1,1,1917,1917&ava=1\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Pasha\",\r\n            img: \"https://sun1.beltelecom-by-minsk.userapi.com/s/v1/if1/LuHL7kJap_p2AMvhHWndMpcGRj6lv9f_OiEscfE9zqkeFhQAbA7NB15Bfglq5l_IPB2JOmHb.jpg?size=200x200&quality=96&crop=560,0,720,720&ava=1\"\r\n        },\r\n    ],\r\n    messages: [\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"I'm gonna make him an offer he can't refuse.\",\r\n            name: \"Alex\",\r\n            time: \"22:00\",\r\n            avatar: avatarImage,\r\n        },\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"A friend should always underestimate your virtues and an enemy overestimate your faults.\",\r\n            name: \"Sofa\",\r\n            time: \"22:00\",\r\n            avatar: \"https://sun9-80.userapi.com/impg/gJeHyr8s0kj96H0LVEz1Gq7vHteh1QYV8_Kdow/FRSJlnhrNaY.jpg?size=878x627&quality=96&sign=00b60f8e76d747c622535e511da56ce4&type=album\",\r\n        },\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"Revenge is a dish best served cold.\",\r\n            name: \"Alex\",\r\n            time: \"22:00\",\r\n            avatar: avatarImage,\r\n        },\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"You spend time with your family?\",\r\n            name: \"Sofa\",\r\n            time: \"22:00\",\r\n            avatar: \"https://sun9-80.userapi.com/impg/gJeHyr8s0kj96H0LVEz1Gq7vHteh1QYV8_Kdow/FRSJlnhrNaY.jpg?size=878x627&quality=96&sign=00b60f8e76d747c622535e511da56ce4&type=album\",\r\n        },\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"Sure I do.\",\r\n            name: \"Alex\",\r\n            time: \"22:00\",\r\n            avatar: avatarImage,\r\n        },\r\n        {\r\n            head: \"Alex\",\r\n            id: v1(),\r\n            messageText: \"Good. 'Cause a man who doesn't spend time with his family can never be a real man.\",\r\n            name: \"Sofa\",\r\n            time: \"22:00\",\r\n            avatar: \"https://sun9-80.userapi.com/impg/gJeHyr8s0kj96H0LVEz1Gq7vHteh1QYV8_Kdow/FRSJlnhrNaY.jpg?size=878x627&quality=96&sign=00b60f8e76d747c622535e511da56ce4&type=album\",\r\n        },\r\n    ],\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsPageType = initialDialogsState, action: DialogsActionsType): DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state, messages: [...state.messages, {\r\n                    head: \"Alex\",\r\n                    id: v1(),\r\n                    messageText: action.newMessage,\r\n                    name: \"Alex\",\r\n                    time: \"22:00\",\r\n                    avatar: avatarImage,\r\n                }]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {v1} from \"uuid\";\r\nimport {ProfileActionsType} from \"../action-creators/profile\";\r\n\r\nexport const imgForNewPost = \"https://sun9-52.userapi.com/impf/c850120/v850120142/de34f/-V0Lx1I09fo.jpg?size=2160x2160&quality=96&sign=e11d8ba5c927096811c14b692a8f67e0&type=album\"\r\n\r\nexport const ADD_POST = \"profile/ADD-POST\"\r\nexport const SET_USER_INFO = \"profile/SET-USER-INFO\"\r\nexport const SET_PROFILE_STATUS = \"profile/SET-PROFILE-STATUS\"\r\nexport const SET_PROFILE_PHOTO = \"profile/SET-PROFILE-PHOTO\"\r\n\r\n\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n    img: string\r\n}\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type ContactsType = {\r\n    [github: string]: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\nexport type UserInfoType = {\r\n    aboutMe: string\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    userInfo: UserInfoType\r\n    status: string\r\n}\r\n\r\nexport const initialProfileState: ProfilePageType = {\r\n    userInfo: {\r\n        userId: 1,\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: \"\",\r\n        fullName: \"\",\r\n        aboutMe: \"\",\r\n        contacts: {\r\n            github: \"\",\r\n            vk: \"\",\r\n            facebook: \"\",\r\n            instagram: \"\",\r\n            twitter: \"\",\r\n            website: \"\",\r\n            youtube: \"\",\r\n            mainLink: \"\",\r\n        },\r\n        photos: {\r\n            small: null,\r\n            large: null,\r\n        },\r\n    } as UserInfoType,\r\n    posts: [\r\n        {\r\n            id: v1(),\r\n            message: \"Hello, how are you?\",\r\n            likesCount: 5,\r\n            img: imgForNewPost,\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: \"How was your day?\",\r\n            likesCount: 9,\r\n            img: imgForNewPost,\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: \"This day is amazing\",\r\n            likesCount: 1,\r\n            img: imgForNewPost,\r\n        },\r\n    ] as Array<PostType>,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReducer = (state = initialProfileState, action: ProfileActionsType): ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state, posts: [...state.posts, {\r\n                    id: v1(),\r\n                    message: action.newPostText,\r\n                    likesCount: 0,\r\n                    img: imgForNewPost,\r\n                }]\r\n            }\r\n\r\n        case SET_USER_INFO:\r\n            return {...state, userInfo: action.userInfo}\r\n\r\n        case SET_PROFILE_STATUS:\r\n            return {...state, status: action.status}\r\n\r\n        case SET_PROFILE_PHOTO:\r\n            return {\r\n                ...state,\r\n                userInfo: {...state.userInfo, photos: action.photos}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {UsersActionsType} from \"../action-creators/users\";\r\n\r\nexport const TOGGLE_FOLLOW = \"users/TOGGLE-FOLLOW\"\r\nexport const SET_USERS = \"users/SET-USERS\";\r\nexport const SET_CURRENT_PAGE = \"users/SET-CURRENT-PAGE\"\r\nexport const SET_TOTAL_COUNT = \"users/SET-TOTAL-COUNT\"\r\nexport const TOGGLE_IS_FETCHING = \"users/TOGGLE-IS-FETCHING\"\r\nexport const TOGGLE_FOLLOWING_PROGRESS = \"users/TOGGLE-IS-FOLLOWING-PROGRESS\"\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: { small: string, large: string }\r\n    followed: boolean\r\n    // location: UserLocationType\r\n}\r\nexport type UsersPageType = {\r\n    users: Array<UserType>\r\n    count: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\nconst initialUsersState: UsersPageType = {\r\n    users: [] as Array<UserType>,\r\n    count: 8,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state = initialUsersState, action: UsersActionsType): UsersPageType => {\r\n\r\n    switch (action.type) {\r\n        case TOGGLE_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(u => u.id === action.userId ? {...u, followed: !u.followed} : u)\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalCount: action.totalCount}\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Friend_avatar__1NyzY\"};","import React from 'react';\r\nimport style from './Friend.module.css';\r\n\r\ntype FriendPropsType = {\r\n    id: string\r\n    name: string\r\n    img: string\r\n}\r\n\r\nexport function Friend(props: FriendPropsType ) {\r\n    return (\r\n        <div key={props.id}>\r\n            <img className={style.avatar} src={props.img} alt=\"avatar\"/>\r\n            <div>{props.name}</div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Friend} from \"./Friend/Friend\";\r\nimport style from './ActiveFriends.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {FriendType} from \"../../../redux/reducers/sidebar-reducer\";\r\n\r\ntype ActiveFriendsPropsType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\nexport function ActiveFriends(props: ActiveFriendsPropsType) {\r\n\r\n    const activeLinkStyle = ({isActive}: {isActive: boolean}) => isActive ? style.activeLink : \"\"\r\n\r\n    let FriendElement = props.friends.map(friend =><NavLink className={activeLinkStyle} key={friend.id} to={`/dialogs/${friend.id}`}><Friend  id={friend.id} name={friend.name} img={friend.img}/></NavLink> )\r\n\r\n    return (\r\n        <div className={style.activeFriends}>\r\n            {FriendElement}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {NavLink, useParams} from 'react-router-dom';\r\nimport style from './Sidebar.module.css';\r\nimport {ActiveFriends} from \"./ActiveFriends/ActiveFriends\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {FriendsType} from \"../../redux/reducers/sidebar-reducer\";\r\nimport {Nullable} from \"../../types\";\r\n\r\nexport const Sidebar = () => {\r\n    let sidebar = useSelector<RootStateType, FriendsType>(state => state.sidebar)\r\n    const authId = useTypedSelector(state => state.auth.id)\r\n    const isAuth = useTypedSelector(state => state.auth.isAuth)\r\n    const {userId} = useParams<'userId'>()\r\n\r\n    const navigateTo = (isAuth: boolean, authId: Nullable<number>, userId: string | undefined) => {\r\n        if (isAuth) {\r\n            return `/profile/${authId}`\r\n        }\r\n        if (!userId) {\r\n            return `/login`\r\n        }\r\n        return `/profile/${userId}`\r\n\r\n    }\r\n\r\n    const activeLinkStyle = ({isActive}: { isActive: boolean }) => isActive ? style.activeLink : \"\"\r\n    const activeLinkStyleForProfile = ({isActive}: { isActive: boolean }) => isActive && authId ? style.activeLink : \"\"\r\n\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink\r\n                    to={navigateTo(isAuth, authId, userId)}\r\n                    className={activeLinkStyleForProfile}>\r\n                    Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/dialogs\" className={activeLinkStyle}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/news\" className={activeLinkStyle}>News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/music\" className={activeLinkStyle}>Music</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/settings\" className={activeLinkStyle}>Settings</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/users\" className={activeLinkStyle}>Users</NavLink>\r\n            </div>\r\n            <div className={style.activeFriends}>\r\n                <h3 className={style.title}>Friends:</h3>\r\n                <ActiveFriends friends={sidebar.friends}/>\r\n            </div>\r\n        </nav>\r\n    );\r\n};","import React from 'react';\r\nimport style from './News.module.css';\r\n\r\nexport function News() {\r\n    return (\r\n        <div>News component</div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport style from './Music.module.css';\r\n\r\nexport function Music() {\r\n    return (\r\n        <div>Music component</div>\r\n    );\r\n}","import React from 'react';\r\nimport style from './Settings.module.css';\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>Settings component</div>\r\n    );\r\n}","import {RootStateType} from \"../redux-store\";\r\nimport {Nullable} from \"../../types\";\r\n\r\nexport const selectAuthID = (state: RootStateType): Nullable<number> => state.auth.id\r\nexport const selectIsAuth = (state: RootStateType): boolean => state.auth.isAuth\r\nexport const selectCaptchaUrl = (state: RootStateType): Nullable<string> => state.auth.captchaUrl\r\nexport const selectAuthError = (state: RootStateType): Nullable<string> => state.auth.error","import React from 'react';\r\nimport {ErrorMessage, Field, Form} from \"formik\";\r\nimport s from \"./LoginForm.module.css\";\r\nimport {Button} from \"../../UI/Button/Button\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {selectAuthError, selectCaptchaUrl} from \"../../redux/selectors/auth-selectors\";\r\n\r\nexport const LoginForm = () => {\r\n    const captchaUrl = useTypedSelector(selectCaptchaUrl)\r\n    const error = useTypedSelector(selectAuthError)\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <div>\r\n                    <Field\r\n                        className={s.formInput}\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"email\"\r\n                        type=\"email\"\r\n                    />\r\n                    <ErrorMessage name=\"email\" component=\"div\" className={s.error}/>\r\n                </div>\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <div>\r\n                    <Field className={s.formInput} id=\"password\" name=\"password\"\r\n                           type='password' placeholder=\"password\"/>\r\n                    <ErrorMessage name=\"password\" component=\"div\" className={s.error}/>\r\n                    {error && <div style={{color: \"red\"}}>{error}</div>}\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        className={s.checkbox}\r\n                        name=\"rememberMe\"\r\n                        type=\"checkbox\"\r\n                        id='rememberMe'\r\n                    />\r\n                    <label\r\n                        className={s.checkbox}\r\n                        htmlFor=\"rememberMe\"\r\n                        id='rememberMe'\r\n                    >\r\n                        remember me\r\n                    </label>\r\n                </div>\r\n                {captchaUrl !== null &&\r\n                    <div>\r\n\t\t\t\t\t\t<img src={captchaUrl} alt=\"captchaImage\"/>\r\n                    <div>\r\n\t\t\t\t\t\t<Field className={s.formInput} id=\"captchaUrl\" name=\"captchaUrl\"/>\r\n                    </div>\r\n                    </div>\r\n                }\r\n                <Button type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </>\r\n    );\r\n}","import {AuthActionsType} from \"../action-creators/auth\";\r\nimport {Nullable} from \"../../types\";\r\n\r\nexport const SET_USER_DATA = \"auth/SET_USER_DATA\";\r\nexport const GET_CAPTCHA_URL = \"auth/GET_CAPTCHA_URL\";\r\nexport const SET_ERROR = \"auth/SET_ERROR\";\r\n\r\nexport type AuthStateType = {\r\n    id: Nullable<number>\r\n    login: Nullable<string>\r\n    email: Nullable<string>\r\n    error: Nullable<string>\r\n    isAuth: boolean\r\n    captchaUrl: Nullable<string>\r\n}\r\n\r\nconst initState: AuthStateType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n    error: null,\r\n}\r\n\r\nexport const authReducer = (state = initState, action: AuthActionsType): AuthStateType=> {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case GET_CAPTCHA_URL : {\r\n            return {...state, captchaUrl: action.captchaUrl}\r\n        }\r\n        case SET_ERROR : {\r\n            return {...state, error: action.error}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {GET_CAPTCHA_URL, SET_ERROR, SET_USER_DATA} from \"../reducers/auth-reducer\";\r\nimport {ThunkType} from \"../redux-store\";\r\nimport {authAPI, securityAPI} from \"../../api/api\";\r\nimport {Nullable} from \"../../types\";\r\n\r\nexport type AuthActionsType =\r\n    SetAuthUserDataACType\r\n    | SetCaptchaUrlACType\r\n    | SetAuthErrorACType\r\n\r\nexport type SetAuthUserDataACType = ReturnType<typeof setAuthUserDataAC>\r\nexport const setAuthUserDataAC = (email: Nullable<string>, id: Nullable<number>, login: Nullable<string>, isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {email, id, login, isAuth},\r\n    } as const\r\n}\r\n\r\nexport type SetCaptchaUrlACType = ReturnType<typeof setCaptchaUrlAC>\r\nexport const setCaptchaUrlAC = (captchaUrl: Nullable<string>) => {\r\n    return {\r\n        type: GET_CAPTCHA_URL,\r\n        captchaUrl,\r\n    } as const\r\n}\r\n\r\nexport type SetAuthErrorACType = ReturnType<typeof setAuthErrorAC>\r\nexport const setAuthErrorAC = (error: Nullable<string>) => {\r\n    return {\r\n        type: SET_ERROR,\r\n        error,\r\n    } as const\r\n}\r\n\r\n// THUNK\r\nexport const getUserDataTC = (): ThunkType => async dispatch => {\r\n    try {\r\n        const res = await authAPI.getUserData()\r\n        if (res.data.resultCode === 0) {\r\n            const {email, id, login} = res.data.data\r\n            dispatch(setAuthUserDataAC(email, id, login, true))\r\n            return res\r\n        }\r\n    } catch (err: any) {\r\n        console.warn(err)\r\n    }\r\n}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha?: string): ThunkType => async dispatch => {\r\n    try {\r\n        const res = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(getUserDataTC())\r\n            dispatch(setAuthErrorAC(null))\r\n        }\r\n        if (res.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrlTC())\r\n        }\r\n        if (res.data.resultCode === 1) {\r\n            dispatch(setAuthErrorAC(res.data.messages[0]))\r\n        }\r\n    } catch (err: any) {\r\n        console.warn(err)\r\n    }\r\n}\r\n\r\nexport const logoutTC = (): ThunkType => async dispatch => {\r\n    try {\r\n        const res = await authAPI.logout()\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setAuthUserDataAC(null, null, null, false))\r\n        }\r\n    } catch (err: any) {\r\n        console.warn(err)\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrlTC = (): ThunkType => async dispatch => {\r\n    try {\r\n        const res = await securityAPI.getCaptchaUrl()\r\n        dispatch(setCaptchaUrlAC(res.data.url))\r\n    } catch (err: any) {\r\n        console.warn(err)\r\n    }\r\n}","import React from 'react';\r\nimport {Formik, FormikHelpers} from 'formik';\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginTC, setCaptchaUrlAC} from \"../../redux/action-creators/auth\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport s from './Login.module.css'\r\nimport {\r\n    selectAuthID,\r\n    selectIsAuth\r\n} from \"../../redux/selectors/auth-selectors\";\r\n\r\ntype LoginValues = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captchaUrl: string\r\n}\r\n\r\nexport const Login = () => {\r\n    const isAuth = useTypedSelector(selectIsAuth)\r\n    const authId = useTypedSelector(selectAuthID)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const loginValidate = (values: LoginValues) => {\r\n        let errors: Partial<LoginValues> = {};\r\n        if (!values.email) {\r\n            errors.email = 'Required';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n        }\r\n\r\n        if (!values.password) {\r\n            errors.password = 'Required';\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n    const initValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false,\r\n        captchaUrl: '',\r\n    }\r\n\r\n    const handleOnSubmitClick = (\r\n        values: LoginValues,\r\n        {setSubmitting}: FormikHelpers<LoginValues>,\r\n    ) => {\r\n        const {email, password, rememberMe, captchaUrl} = values\r\n        dispatch(loginTC(email, password, rememberMe, captchaUrl))\r\n        dispatch(setCaptchaUrlAC(null))\r\n        setSubmitting(false);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={`/profile/${authId}`}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginWrapper}>\r\n\r\n            <div>\r\n                <h1>Log in</h1>\r\n                <div>\r\n                    <h4>Here's default email and password so you can try it online\r\n                        <p>login: <span className={s.description}>free@samuraijs.com</span></p>\r\n                        <p>password: <span className={s.description}>free</span></p>\r\n                    </h4>\r\n                </div>\r\n                <Formik\r\n                    initialValues={initValues}\r\n                    onSubmit={handleOnSubmitClick}\r\n                    validate={loginValidate}\r\n                >\r\n                    <LoginForm/>\r\n                </Formik>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"../../UI/Button/Button\";\r\n\r\nexport type HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logoutHandler: () => void\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = ({isAuth, login, logoutHandler}) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                className={s.logo}\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Check_green_icon.svg/1200px-Check_green_icon.svg.png\"\r\n                alt=\"logo\"/>\r\n\r\n            <div className={s.loginBlock}>\r\n                {isAuth ? (\r\n                        <div>\r\n                            <span>{login}</span>\r\n                            <NavLink to={\"/login\"}>\r\n                                <Button onClick={logoutHandler}>Logout</Button>\r\n                            </NavLink>\r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                        <NavLink to={\"/login\"}>\r\n                            <Button>Login</Button>\r\n                        </NavLink>\r\n                    )}\r\n\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n};","import React from 'react';\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {getUserDataTC, logoutTC} from \"../../redux/action-creators/auth\";\r\nimport {Nullable} from \"../../types\";\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUserDataTC: () => void\r\n    logoutTC: () => void\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    login: Nullable<string>\r\n    isAuth: boolean\r\n}\r\n\r\nexport type HeaderContainerPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    logoutHandler = () => {\r\n        this.props.logoutTC()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header\r\n                {...this.props}\r\n                logoutHandler={this.logoutHandler}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: RootStateType): mapStateToPropsType => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {getUserDataTC, logoutTC})(HeaderContainer);","import {AppActionsType} from \"../action-creators/app\";\r\n\r\nexport const INITIALIZED_SUCCESS = \"app/INITIALIZED_SUCCESS\";\r\n\r\nexport type AppStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: AppStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): AppStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {...state, initialized: true,}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {RootStateType} from \"../redux-store\";\r\n\r\nexport const selectInitialized = (state: RootStateType) => state.app.initialized","import React, {Suspense, useEffect} from 'react';\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useTypedSelector} from \"./hooks/useTypedSelector\";\r\n\r\nimport {Sidebar} from \"./components/Sidebar/Sidebar\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\n\r\nimport {initializeAppTC} from \"./redux/action-creators/app\";\r\nimport {selectInitialized} from \"./redux/selectors/app-selectors\";\r\nimport {selectAuthID} from \"./redux/selectors/auth-selectors\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'));\r\nconst Profile = React.lazy(() => import('./components/Profile/Profile'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nexport const App = () => {\r\n\r\n    const initialized = useTypedSelector(selectInitialized)\r\n    const authID = useTypedSelector(selectAuthID)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [dispatch])\r\n\r\n    const isUserAuth = authID ? `/profile/${authID}` : '/login'\r\n\r\n    if (!initialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <HeaderContainer/>\r\n            <Sidebar/>\r\n            <div className=\"app-wrapper-content\">\r\n                <Suspense fallback={<Preloader/>}>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Navigate to={isUserAuth}/>}/>\r\n                        <Route path=\"/profile/:userId\" element={<Profile/>}/>\r\n                        <Route path=\"/login\" element={<Login/>}/>\r\n                        <Route path=\"/dialogs\" element={<Dialogs/>}/>\r\n                        <Route path=\"/news\" element={<News/>}/>\r\n                        <Route path=\"/music\" element={<Music/>}/>\r\n                        <Route path=\"/settings\" element={<Settings/>}/>\r\n                        <Route path=\"/users\" element={<UsersContainer/>}/>\r\n                    </Routes>\r\n                </Suspense>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {INITIALIZED_SUCCESS} from \"../reducers/app-reducer\";\r\nimport {ThunkType} from \"../redux-store\";\r\nimport {getUserDataTC} from \"./auth\";\r\n\r\nexport type AppActionsType = initializedSuccessACType\r\n\r\nexport type initializedSuccessACType = ReturnType<typeof initializedSuccessAC>\r\nexport const initializedSuccessAC = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS,\r\n    } as const\r\n}\r\n\r\n// THUNK\r\nexport const initializeAppTC = (): ThunkType => async dispatch => {\r\n    const promise = dispatch(getUserDataTC())\r\n    await Promise.all([promise])\r\n    dispatch(initializedSuccessAC())\r\n\r\n}","import {v1} from \"uuid\";\r\n\r\nexport type FriendType = {\r\n    id: string\r\n    name: string\r\n    img: string\r\n}\r\nexport type FriendsType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\nconst initialSidebarState = {\r\n    friends: [\r\n        {\r\n            id: v1(),\r\n            name: \"Alex\",\r\n            img: \"https://sun9-52.userapi.com/impf/c850120/v850120142/de34f/-V0Lx1I09fo.jpg?size=2160x2160&quality=96&sign=e11d8ba5c927096811c14b692a8f67e0&type=album\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Sofa\",\r\n            img: \"https://sun9-80.userapi.com/impg/gJeHyr8s0kj96H0LVEz1Gq7vHteh1QYV8_Kdow/FRSJlnhrNaY.jpg?size=878x627&quality=96&sign=00b60f8e76d747c622535e511da56ce4&type=album\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: \"Oleg\",\r\n            img: \"https://sun1.beltelecom-by-minsk.userapi.com/s/v1/ig1/r3RvNnQxvdb_L2EuFMLfbDCBxbtm8pL8xQKGYVNbvsmoCAxAOr_9Hyi1KkeIFbCVhrhQ_mvT.jpg?size=200x200&quality=96&crop=1,1,1917,1917&ava=1\"\r\n        },\r\n    ],\r\n}\r\n\r\nexport const sidebarReducer = (state: FriendsType = initialSidebarState, action: any): FriendsType => {\r\n    return state;\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {\r\n    appReducer,\r\n    authReducer,\r\n    dialogsReducer,\r\n    profileReducer,\r\n    sidebarReducer,\r\n    usersReducer\r\n} from \"./reducers\";\r\nimport {\r\n    AppActionsType,\r\n    AuthActionsType,\r\n    DialogsActionsType,\r\n    ProfileActionsType, UsersActionsType\r\n} from \"./action-creators/types\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\nexport type ThunkType = ThunkAction<void, RootStateType, unknown, RootActionsType>\r\n\r\nexport type RootActionsType =\r\n    AuthActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | UsersActionsType\r\n    | AppActionsType\r\n\r\n//@ts-ignore\r\nwindow.store = store","import ReactDOM from \"react-dom\";\nimport {HashRouter} from \"react-router-dom\";\nimport {App} from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport React from \"react\";\nimport './index.css'\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(<React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>, document.getElementById('root')\n);"],"sourceRoot":""}